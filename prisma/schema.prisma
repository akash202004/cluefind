// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                  String   @id @default(cuid())
  email               String   @unique
  emailVerified       Boolean  @default(false)
  password            String?
  name                String?
  image               String?
  onboardingComplete  Boolean  @default(false)
  createdAt           DateTime @default(now())
  updatedAt           DateTime @updatedAt

  accounts      Account[]
  sessions      Session[]
  profile       Profile?
  vouches       Vouch[] @relation("VouchesGiven")
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Profile {
  id            String   @id @default(cuid())
  userId        String   @unique
  bio           String?
  skills        String[] @default([])
  resumeUrl     String?
  lastSyncedAt  DateTime?
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt

  user          User     @relation(fields: [userId], references: [id])
  repos         Repo[]
  vouches       Vouch[]
}

model Repo {
  id          String  @id @default(cuid())
  profileId   String
  name        String
  description String?
  url         String
  languages   String[]
  stars       Int
  fork        Boolean @default(false)
  createdAt   DateTime @default(now())

  profile     Profile @relation(fields: [profileId], references: [id])
}
  
model Vouch {
  id          String   @id @default(cuid())
  profileId   String
  voucherId   String
  skill       String?
  message     String?
  verified    Boolean  @default(false)
  createdAt   DateTime @default(now())

  profile     Profile  @relation(fields: [profileId], references: [id])
  voucher     User     @relation("VouchesGiven", fields: [voucherId], references: [id])
}