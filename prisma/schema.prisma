// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                  String   @id @default(cuid())
  email               String   @unique
  emailVerified       Boolean  @default(false)
  name                String?
  username            String   @unique
  image               String?
  bio                 String?
  googleId            String?  @unique
  onboardingComplete  Boolean  @default(false)
  createdAt           DateTime @default(now())
  updatedAt           DateTime @updatedAt

  profile       Profile?
  vouches       Vouch[] @relation("VouchesGiven")
}

model Profile {
  id            String   @id @default(cuid())
  userId        String   @unique
  skills        String[] @default([])
  resumeContent String?
  githubId      String?
  resumeUrl     String?
  projects      Json?    // Array of {title, description, url}
  socialLinks   Json?    // Array of {platform, url}
  lastSyncedAt  DateTime?
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt

  user          User     @relation(fields: [userId], references: [id])
  repos         Repo[]
  vouches       Vouch[]
}

model Repo {
  id          String  @id @default(cuid())
  profileId   String
  name        String
  description String?
  url         String
  languages   String[]
  fork        Boolean @default(false)
  createdAt   DateTime @default(now())

  profile     Profile @relation(fields: [profileId], references: [id])
}
  
model Vouch {
  id          String   @id @default(cuid())
  profileId   String
  voucherId   String
  skill       String?
  message     String?
  verified    Boolean  @default(false)
  createdAt   DateTime @default(now())

  profile     Profile  @relation(fields: [profileId], references: [id])
  voucher     User     @relation("VouchesGiven", fields: [voucherId], references: [id])
}